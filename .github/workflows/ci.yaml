name: Continuous Deployment

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish:
    name: Publishing for ${{ matrix.job.os }}-${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          - { os: windows-latest, target: x86_64-pc-windows-msvc,      use-cross: false }
          - { os: ubuntu-latest , target: x86_64-unknown-linux-gnu,    use-cross: false }
          - { os: ubuntu-latest,  target: aarch64-unknown-linux-gnu,   use-cross: true }

    steps:
      - name: Install required dependencies
        shell: bash
        run: |
          if [[ ${{ matrix.job.os }} == ubuntu-latest ]]; then
              sudo apt update
              sudo apt-get install -y libssl-dev
          fi
      - name: Installing Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{ matrix.job.use-cross }}
          args: --release --target ${{ matrix.job.target }}

      - name: Change Build artifact name
        shell: bash
        run: |
          if [[ ${{ matrix.job.os }} == ubuntu-latest ]]; then
          mv target/${{ matrix.job.target }}/release/libpollnet.so target/${{ matrix.job.target }}/release/libpollnet_${{ matrix.job.target }}.so
          fi
          if [[ ${{ matrix.job.os }} == windows-latest ]]; then
          mv target/${{ matrix.job.target }}/release/libpollnet.dll target/${{ matrix.job.target }}/release/libpollnet_${{ matrix.job.target }}.dll
          fi

      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.job.target }}/release/libpollnet_*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}